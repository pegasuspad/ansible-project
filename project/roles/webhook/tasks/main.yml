---
- name: Download and install webhook binary
  block:
  - name: "Download webhook v{{ webhook_version }}"
    vars:
      checksum: "md5:{{ webhook_checksum }}"
      filename: "webhook-{{ webhook_version }}.tgz"
      mode: "0644"
      url: "{{ __webhook_download_url }}"
    ansible.builtin.include_role:
      name: skleinjung.core.fetch
      tasks_from: download.yml
  - name: Unarchive webhook
    ansible.builtin.unarchive:
      creates: /tmp/webhook-linux-amd64
      dest: /tmp
      group: root
      mode: "0755"
      owner: root
      remote_src: true
      src: /tmp/webhook-{{ webhook_version }}.tgz
  - name: Copy webhook binary
    ansible.builtin.copy:
      dest: /usr/local/bin/webhook
      group: root
      mode: '0755'
      owner: root
      remote_src: true
      src: /tmp/webhook-linux-amd64/webhook

- name: Install webhook definitions
  block:
  - name: Create webhook config dir
    ansible.builtin.file:
      path: "{{ webhook_config_dir }}"
      group: root
      mode: '0755'
      owner: root
      state: directory
  - name: Create webhook config file
    ansible.builtin.copy:
      content: "{{ webhook_hook_configs | to_json(indent=2, sort_keys=True) }}"
      dest: "{{ __webhook_config_file }}"
      group: "{{ webhook_user }}"
      # this file may contain secrets, so we prevent others from reading
      mode: '0640'
      owner: root
    notify:
      - Restart webhook service

- name: Install TLS certificates
  when: __webhook_tls_enabled
  block:
  - name: Create certs dir
    ansible.builtin.file:
      group: "{{ webhook_user }}"
      mode: '0755'
      owner: root
      path: "{{ webhook_config_dir }}/certs"
      state: directory
  - name: Create cert file
    ansible.builtin.copy:
      content: "{{ webhook_tls_crt }}"
      dest: "{{ __webhook_tls_cert_path }}"
      group: "{{ webhook_user }}"
      mode: '0644'
      owner: root
  - name: Create key file
    ansible.builtin.copy:
      content: "{{ webhook_tls_key }}"
      dest: "{{ __webhook_tls_key_path }}"
      group: "{{ webhook_user }}"
      mode: '0640'
      owner: root

- name: Install systemd service
  block:
  - name: Create logrotate entry for service
    ansible.builtin.template:
      dest: /etc/logrotate.d/webhook
      group: root
      mode: "0644"
      owner: root
      src: etc/logrotate.d/webhook.j2
  - name: Ensure log file exists
    ansible.builtin.copy:
      content: ""
      dest: "{{ webhook_log }}"
      force: false
      group: "{{ webhook_user }}"
      mode: '0664'
      owner: root
  - name: Ensure log file has correct owner and permissions
    ansible.builtin.file:
      path: "{{ webhook_log }}"
      group: "{{ webhook_user }}"
      mode: '0664'
      owner: root
  - name: Create service unit file
    ansible.builtin.template:
      dest: /etc/systemd/system/webhook.service
      group: root
      mode: "0644"
      owner: root
      src: "etc/systemd/system/webhook.service.j2"
    notify:
      - Restart webhook service
  - name: Enable webhook service
    ansible.builtin.systemd_service:
      name: webhook
      enabled: true