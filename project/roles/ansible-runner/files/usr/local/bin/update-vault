#!/usr/bin/env bash

# DESCRIPTION
# -------------
# This script reads a secret value passed as stdin, encrypts the single value with "ansible-vault encrypt_string" and
# adds it to a specified Ansible vars file. The file will be sorted by variable key. If the file already contained a
# value with the specified key, it will be updated in place. Otherwise, it will be created. If the file does not exist,
# it will be created (including missing parent directories). Changes are made in-place to the  original file.
#
# Example: echo "super-secret-value" | ./update-vault test.yml production@my-vault-pwd-file my-password

# ARGUMENTS
# -------------
# stdin - secret value to encrypt and store
# $1 = name of the Yaml file in which to add/update the value; if this file does not exist it will be created
# $2 = value suitable to pass to the 'vault-id' paramter of ansible-vault (e.g. "production@/path/to/password")
# $3 = Yaml key for the variable to create or update
#
# NOTE: To pass keys containing periods (.) to $2, enclose the whole parameter in single quotes and the key with
#   periods in double quotes (e.g. 'domains."example.com".ip')
#   See: https://mikefarah.gitbook.io/yq/operators/traverse-read#nested-special-characters

# REFERENCES
# -------------
# syntax to read stdin to a variable: https://dev.to/jeremyckahn/til-reading-stdin-to-a-bash-variable-1kln
# yq doc on using strenv for special chars: https://mikefarah.gitbook.io/yq/usage/tips-and-tricks#special-characters-in-strings
# yq quick usage guide with merge example: https://mikefarah.gitbook.io/yq/#quick-usage-guide
# yq sort_keys documentation: https://mikefarah.gitbook.io/yq/operators/sort-keys#sort-keys-of-map
# reddit post showing merging+sorting: https://www.reddit.com/r/selfhosted/comments/v8jdw2/combine_docker_compose_files_using_yq/
# ansible-vault encrypt_string docs: https://docs.ansible.com/ansible/latest/vault_guide/vault_encrypting_content.html

# SUPPORTED VERSIONS
# -------------
# Tested with the following versions of ansible-vault:
#
# ansible-vault 2.10.8
#   config file = None
#   configured module search path = ['/home/skleinjung/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
#   ansible python module location = /usr/lib/python3/dist-packages/ansible
#   executable location = /usr/bin/ansible-vault
#   python version = 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]

mkdir -p $(dirname "$1")
touch "$1"

# for the gnarly yq eval syntax, see:
#   - https://stackoverflow.com/a/73682433
#   - https://mikefarah.gitbook.io/yq/operators/env-variable-operators#dynamically-update-a-path-from-an-environment-variable
VAL=$(</dev/stdin)
ENCRYPTED_VALUE=$(echo -n "${VAL}" | ansible-vault encrypt_string \
  --vault-id "$2" \
  --output -)

ENCRYPTED_VALUE_WITHOUT_TAG=$(echo "temp_value: ${ENCRYPTED_VALUE}" | yq e '.temp_value' -)

export KEY=".${3}"
export VALUE=${ENCRYPTED_VALUE_WITHOUT_TAG}
yq e -n 'eval(strenv(KEY)) = strenv(VALUE)' | yq e 'eval(strenv(KEY)) tag = "!vault"' - |
  yq ea -i '. as $item ireduce ({}; . * $item ) | sort_keys(..)' "$1" - 
