#!/usr/bin/env bash

# DESCRIPTION
# -------------
# Invokes Ansible's debug module to print the decrypted value of a variable encrypted via ansible-vault's
# encrypt_string sub-command.
#
# Example: ./read-vault-vaule test.yml production@my-vault-pwd-file my-password

# ARGUMENTS
# -------------
# $1 = name of the Yaml file containing the encrypted variable
# $2 = value suitable to pass to the 'vault-id' paramter of ansible-vault (e.g. "production@/path/to/password")
# $3 = Yaml key for the variable to read

# REFERENCES
# -------------
# Ansible docs showing this method of displaying values: https://docs.ansible.com/ansible/latest/vault_guide/vault_encrypting_content.html#viewing-encrypted-variables

# SUPPORTED VERSIONS
# -------------
# Tested with the following versions of ansible:
#
# ansible 2.10.8
#   config file = None
#   configured module search path = ['/home/skleinjung/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
#   ansible python module location = /usr/lib/python3/dist-packages/ansible
#   executable location = /usr/bin/ansible
#   python version = 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]

ansible localhost -i 'localhost,' -m ansible.builtin.debug -a var="${3}" -e "@${1}" --vault-id "${2}"
